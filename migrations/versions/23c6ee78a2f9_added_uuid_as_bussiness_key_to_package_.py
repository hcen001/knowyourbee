"""Added UUID as bussiness key to package, sample, specimen models & Added genders, caste, stages enums to specimen model

Revision ID: 23c6ee78a2f9
Revises: 2e9e67222098
Create Date: 2018-03-29 16:16:27.466318

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23c6ee78a2f9'
down_revision = '2e9e67222098'
branch_labels = None
depends_on = None

from app.mod_util.utils import GUID
sa.GUID = GUID

def upgrade():
    _gender = postgresql.ENUM('male', 'female', name='gender_enum')
    _gender.create(op.get_bind())
    _caste = postgresql.ENUM('drone', 'worker', 'queen', name='caste_enum')
    _caste.create(op.get_bind())
    _stage = postgresql.ENUM('egg', 'pupae', 'larvae', 'nymph', 'adult', name='dev_stage_enum')
    _stage.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subspecies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    #op.drop_table('spatial_ref_sys')
    op.add_column('sample', sa.Column('sample_id', sa.GUID(), nullable=False))
    op.add_column('specimen', sa.Column('caste', postgresql.ENUM('drone', 'worker', 'queen', name='caste_enum'), nullable=False))
    op.add_column('specimen', sa.Column('development_stage', postgresql.ENUM('egg', 'pupae', 'larvae', 'nymph', 'adult', name='dev_stage_enum'), nullable=False))
    op.add_column('specimen', sa.Column('gender', postgresql.ENUM('male', 'female', name='gender_enum'), nullable=False))
    op.add_column('specimen', sa.Column('genus_id', sa.Integer(), nullable=False))
    op.add_column('specimen', sa.Column('group_id', sa.Integer(), nullable=False))
    op.add_column('specimen', sa.Column('species_id', sa.Integer(), nullable=False))
    op.add_column('specimen', sa.Column('specimen_id', sa.GUID(), nullable=False))
    op.add_column('specimen', sa.Column('subspecies_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'specimen', 'group', ['group_id'], ['id'])
    op.create_foreign_key(None, 'specimen', 'species', ['species_id'], ['id'])
    op.create_foreign_key(None, 'specimen', 'genus', ['genus_id'], ['id'])
    op.create_foreign_key(None, 'specimen', 'subspecies', ['subspecies_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    _gender = postgresql.ENUM('male', 'female', name='gender_enum')
    _gender.drop(op.get_bind())
    _caste = postgresql.ENUM('drone', 'worker', 'queen', name='caste_enum')
    _caste.drop(op.get_bind())
    _stage = postgresql.ENUM('egg', 'pupae', 'larvae', 'nymph', 'adult', name='dev_stage_enum')
    _stage.drop(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_column('specimen', 'subspecies_id')
    op.drop_column('specimen', 'specimen_id')
    op.drop_column('specimen', 'species_id')
    op.drop_column('specimen', 'group_id')
    op.drop_column('specimen', 'genus_id')
    op.drop_column('specimen', 'gender')
    op.drop_column('specimen', 'development_stage')
    op.drop_column('specimen', 'caste')
    op.drop_column('sample', 'sample_id')
    #op.create_table('spatial_ref_sys',
    #sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    #sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    #sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    #sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    #sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    #sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    #sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    #)
    op.drop_table('subspecies')
    op.drop_table('species')
    op.drop_table('group')
    op.drop_table('genus')
    # ### end Alembic commands ###
